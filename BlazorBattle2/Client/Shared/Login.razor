@using System.ComponentModel.Design
@inject ILocalStorageService LocalStorageService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IAuthService AuthService
@inject IToastService ToastService

Please login below or <a href="register">Register</a> for a new accourt.

<EditForm Model="user" OnValidSubmit="OnHandleLogin">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <div class="form-group">
        <label for="username">Email</label>
        <InputText id="username" @bind-Value="user.Email" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" @bind-Value="user.Password" class="form-control" type="password"></InputText>
    </div>
    <ValidationSummary></ValidationSummary>
    <button type="submit" class="btn btn-primary">Login</button>
</EditForm>

@code {
    private UserLogin user = new UserLogin();

    private async void OnHandleLogin()
    {
        var result = await AuthService.Login(user);
        if (result.Succes)
        {
            await LocalStorageService.SetItemAsync<string>("authToken", result.Data);
            await AuthenticationStateProvider.GetAuthenticationStateAsync();
        }
        else
        {
            ToastService.ShowError(result.Message);
        }
        
       
    }
}